name: Build and Publish


permissions:
  contents: write

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        platform: [ macos-latest, ubuntu-20.04, windows-latest ]
    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v3

      - name: installing Make if Ubuntu
        if: matrix.platform == 'ubuntu-20.04'
        run : |
          sudo apt update 
          sudo apt-get install make -y

      - name: installing Make if MacOS
        if: matrix.platform == 'macos-latest'
        run : |
          brew update 
          brew install make

      - name: installing Make if Windows
        if: matrix.platform == 'windows-latest'
        run : |
          Set-ExecutionPolicy Bypass -Scope Process -Force; [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072; iex ((New-Object System.Net.WebClient).DownloadString('https://community.chocolatey.org/install.ps1'))
          choco install make

      - name: build
        run: make build

      - name: upload artifact release
        uses: actions/upload-artifact@v2
        with:
          name: ${{matrix.platform}}
          path: ./build/api-userbase

  publish:
    needs : [build]
    runs-on: ubuntu-latest
    steps:
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          id: create_release
          tag_name: ${{ github.run_number }}
          release_name: Release ${{ github.run_number }}
          draft: false
          prerelease: false

      - name: Download all artifact
        uses: actions/download-artifact@v2

#      - name: Upload ubuntu release asset
#        uses: actions/upload-release-asset@v1
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#        with:
#          upload_url: ${{ steps.create_release.outputs.upload_url }}
#          asset_path: ubuntu-20.04
#          asset_name: ${{ github.event.repository.name }}-release-ubuntu-v${{ github.run_number }}
#          asset_content_type: application/octet-stream

      - name: Upload macos release asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: macos-latest
          asset_name: ${{ github.event.repository.name }}-release-macos-v${{ github.run_number }}
          asset_content_type: application/octet-stream


      - name: Upload windows release asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: windows-latest
          asset_name: ${{ github.event.repository.name }}-release-windows-v${{ github.run_number }}.exe
          asset_content_type: application/x-msdownload
